import os.path
from statistics import mean, multimode, median
#prompts user for file name and checks if the file name is valid
def get_file_name():
    while True:
        user_file = input("What is the name of your file? \n")
        if user_file == "":
            print("\n Error: Invalid File Name \n")
        elif not os.path.exists(user_file):
            print("\n Error: File not Found \n")
        else:
            try:
                max(open(user_file, "r").readlines())
            except ValueError:
                print("\n Error: File has no computable values \n")
            else:
                return user_file 
#converts the text file into a parsable list of numbers
def file_formatter(given_file):
    file_open = open(given_file, "r")
    file_list = file_open.readlines()
    for x in range(len(file_list)):
        y = file_list[x]
        y = int(y.strip())
        file_list[x] = y
    return file_list
#returns various statistical values for the given list (maximum, minumum, average, median, mode(s))
def max_value(list):
    maximum = max(list)
    return maximum
def min_value(list):
    minimum = min(list)
    return minimum
def avg_value(list):
    average = mean(list)
    return average
def med_value(list):
    med = median(list)
    return med
def mode_value(list):
    mde = multimode(list)
    return mde
#parses the list from the mode function into plain numbers
def display_mode(mode):
    for x in range(len(mode)):
        y = mode[x]
        print(f"Mode {x + 1}: {y} \n")
#prompts for file, checks file, and displays various stats for the numbers in the file
def main():
    file = get_file_name()
    value_list = file_formatter(file)
    list_max = max_value(value_list)
    print(f"Maximum: {list_max} \n")
    list_min = min_value(value_list)
    print(f"Minimum: {list_min} \n")
    list_avg = avg_value(value_list)
    print(f"Average: {list_avg} \n")
    list_med = med_value(value_list)
    print(f"Median: {list_med} \n")
    list_mode = mode_value(value_list)
    display_mode(list_mode)
main()
